// neutral simulation of Y chromosome evolution
initialize()
{
	// set the overall mutation rate per base position per generation
	initializeMutationRate(1e-7);

	// define mutation types
	// "m1"=neutral, 0.5=dominance (ignored), f=fixed dfe, 0=s
	initializeMutationType("m1", 0.5, "f", 0.0);

	// define genomic element type
	// this creates a new genomic element type. A genomic element type represents a particular type of chromosomal region â€“ introns, exons, UTRs, etc. Here, "g1" is defined as using mutation type m1 for all of its mutations (as specified by the proportion 1.0, the third parameter)
	initializeGenomicElementType("g1", m1, 1.0);

	// Initialize a uniform chromosome of length 100 kb
	// here, "g1" is 100 kb and ranges from position 0 to 99999
	initializeGenomicElement(g1, 0, 99999);

	// set uniform recombination rate along the region
	// can be ignored: the Y doesnt do recombination in slim
	initializeRecombinationRate(0);

	// initialize chromosome type
	initializeSex("Y");
}

// now create 1 population of 500 individuals
// this runs at generation 1; the very beginning of the simulation
// note that slim simulates diploids: therefore, 1000 individuals are needed for a population of 500 Y chromosomes
// finally, output the data from all 500 males in MS format after 10000 generations
1 { sim.addSubpop("p1", 1000); }
10000 late() { p1.outputMSSample(500,requestedSex="M"); }